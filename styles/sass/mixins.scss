/* colors */
$dark-blue: #3F698B;
$light-blue: #D6E8F8;
$extra-light-blue: #EDF3FC;
$button: #FF8E2D;
$button-hover: #d77c2e;
$anchor-text: #009DE5;
$header-text: #ffffff;
$light-text: #8AA6C1;
$grey: #BEBEBE;

@mixin center-absolute() {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

@mixin ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin cover-background() {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

@mixin size($width, $height : $width) {
  width: $width;
  height: $height;
}

@mixin rounded($radio: 3px) {
  border-radius: $radio;
  -moz-border-radius: $radio;
  -webkit-border-radius: $radio;
}

@mixin box-shadow($shadows : 0 2px 2px 0 rgba(0, 0, 0, 0.2)) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity})";
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

@mixin center-vertically {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%), 'webkit' 'ms');
}

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

@mixin transition($transition...) {
  -ms-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin transition-delay($delay...) {
  -ms-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  -webkit-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

@mixin scale($scale) {
  @include transform(scale($scale));
}

@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

@mixin animation($animation) {
  animation: $animation;
  -ms-animation: $animation;
  -moz-animation: $animation;
  -webkit-animation: $animation;
}

@mixin flex($x) {
  -webkit-box-flex: $x;
  -moz-box-flex: $x;
  -webkit-flex: $x;
  -ms-flex: $x;
  flex: $x;
}
